// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`age renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#FFF",
      "flex": 1,
      "height": 1334,
      "width": 750,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexGrow": 1,
        "justifyContent": "center",
      }
    }
  >
    <Image
      source={1}
      style={
        Object {
          "height": 300,
          "width": 300,
        }
      }
    />
    <Text
      style={
        Object {
          "color": "#000",
          "fontSize": 45,
          "fontWeight": "700",
          "paddingBottom": 10,
          "textAlign": "center",
        }
      }
    >
      Hopsy
    </Text>
    <Text
      style={
        Object {
          "color": "#000",
          "fontSize": 25,
          "fontWeight": "600",
          "paddingBottom": 100,
          "textAlign": "center",
        }
      }
    >
      A simpler way to enjoy beer.
    </Text>
    <Text
      style={
        Object {
          "fontSize": 45,
          "fontWeight": "700",
          "marginBottom": 5,
          "textAlign": "center",
        }
      }
    >
      Are you over 21?
    </Text>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
        "margin": 50,
      }
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#276612",
          "borderRadius": 5,
          "height": 55,
          "justifyContent": "center",
          "marginBottom": 20,
          "opacity": 1,
          "padding": 10,
          "textAlign": "center",
          "width": 120,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#ffffff",
            "fontSize": 17,
            "textAlign": "center",
          }
        }
      >
        Yes
      </Text>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#276612",
          "borderRadius": 5,
          "height": 55,
          "justifyContent": "center",
          "marginBottom": 20,
          "opacity": 1,
          "padding": 10,
          "textAlign": "center",
          "width": 120,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#ffffff",
            "fontSize": 17,
            "textAlign": "center",
          }
        }
      >
        No
      </Text>
    </View>
  </View>
</View>
`;

exports[`home renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "paddingTop": 20,
    }
  }
>
  <View>
    <View
      style={
        Object {
          "alignItems": "center",
          "borderBottomColor": "#E9E9E9",
          "borderBottomWidth": 0.5,
          "flexDirection": "row",
          "height": 65,
          "justifyContent": "center",
          "padding": 10,
        }
      }
    >
      <View
        style={
          Object {
            "left": 0,
            "paddingLeft": 15,
            "position": "absolute",
          }
        }
      >
        <RNGestureHandlerButton
          collapsable={false}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <Text />
          </View>
        </RNGestureHandlerButton>
      </View>
      <View>
        <Text
          style={
            Object {
              "color": "#000",
              "fontSize": 24,
              "textAlignVertical": "center",
            }
          }
        >
          Home
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`map renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "flex": 1,
      "paddingTop": 20,
    }
  }
>
  <View />
  <View>
    <View
      style={
        Object {
          "alignItems": "center",
          "borderBottomColor": "#E9E9E9",
          "borderBottomWidth": 0.5,
          "flexDirection": "row",
          "height": 65,
          "justifyContent": "center",
          "padding": 10,
        }
      }
    >
      <View
        style={
          Object {
            "left": 0,
            "paddingLeft": 15,
            "position": "absolute",
          }
        }
      >
        <RNGestureHandlerButton
          collapsable={false}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <Text />
          </View>
        </RNGestureHandlerButton>
      </View>
      <View>
        <Text
          style={
            Object {
              "color": "#000",
              "fontSize": 24,
              "textAlignVertical": "center",
            }
          }
        >
          Breweries
        </Text>
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <ActivityIndicator
      animating={true}
      color="rgba(68, 126, 36, 1)"
      hidesWhenStopped={true}
      size="large"
    />
  </View>
</View>
`;

exports[`preference renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "height": 1334,
      "paddingTop": 20,
      "width": 750,
    }
  }
>
  <View />
  <View>
    <View
      style={
        Object {
          "alignItems": "center",
          "borderBottomColor": "#E9E9E9",
          "borderBottomWidth": 0.5,
          "flexDirection": "row",
          "height": 65,
          "justifyContent": "center",
          "padding": 10,
        }
      }
    >
      <View
        style={
          Object {
            "left": 0,
            "paddingLeft": 15,
            "position": "absolute",
          }
        }
      >
        <RNGestureHandlerButton
          collapsable={false}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <Text />
          </View>
        </RNGestureHandlerButton>
      </View>
      <View>
        <Text
          style={
            Object {
              "color": "#000",
              "fontSize": 24,
              "textAlignVertical": "center",
            }
          }
        >
          Help us get to know you
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "flexGrow": 1,
      }
    }
  >
    <View>
      <View
        style={
          Object {
            "padding": 20,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#276612",
              "fontSize": 20,
              "paddingBottom": 1,
            }
          }
        >
          Beers you've tried
        </Text>
        <View
          keyboardShouldPersist="always"
          style={
            Object {
              "padding": 5,
            }
          }
        >
          <TextInput
            allowFontScaling={true}
            onBlur={[Function]}
            onChangeText={[Function]}
            onFocus={[Function]}
            placeholder="Bud Light"
            rejectResponderTermination={true}
            style={
              Object {
                "borderColor": "#ccc",
                "borderRadius": 15,
                "borderWidth": 1,
                "padding": 12,
              }
            }
            underlineColorAndroid="transparent"
            value="Modelo"
          />
        </View>
      </View>
      <View
        style={
          Object {
            "padding": 20,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#276612",
              "fontSize": 20,
              "paddingBottom": 10,
            }
          }
        >
          Preferred flavor profile
        </Text>
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#276612",
                "borderColor": "#aee74a",
                "borderRadius": 15,
                "borderWidth": 1,
                "flexDirection": "row",
                "overflow": "hidden",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Array [
                  Object {
                    "backgroundColor": "#276612",
                    "opacity": 1,
                    "paddingBottom": 5,
                    "paddingTop": 5,
                  },
                  Object {
                    "flex": 1,
                  },
                ],
                Object {
                  "flex": 1,
                },
                Object {
                  "borderBottomLeftRadius": 14,
                  "borderTopLeftRadius": 14,
                },
              ]
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "textAlign": "center",
                  },
                  Object {},
                  Object {
                    "color": "white",
                  },
                ]
              }
            >
              Sweet
            </Text>
          </View>
          <View
            accessible={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Array [
                  Array [
                    Object {
                      "backgroundColor": "#276612",
                      "opacity": 1,
                      "paddingBottom": 5,
                      "paddingTop": 5,
                    },
                    Object {
                      "flex": 1,
                    },
                  ],
                  Object {
                    "borderLeftColor": "#aee74a",
                    "borderLeftWidth": 1,
                  },
                ],
                Object {
                  "flex": 1,
                },
                undefined,
              ]
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "textAlign": "center",
                  },
                  Object {},
                  Object {
                    "color": "white",
                  },
                ]
              }
            >
              Mild
            </Text>
          </View>
          <View
            accessible={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Array [
                  Array [
                    Object {
                      "backgroundColor": "#276612",
                      "opacity": 1,
                      "paddingBottom": 5,
                      "paddingTop": 5,
                    },
                    Object {
                      "flex": 1,
                    },
                  ],
                  Object {
                    "borderLeftColor": "#aee74a",
                    "borderLeftWidth": 1,
                  },
                ],
                Object {
                  "flex": 1,
                },
                undefined,
              ]
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "textAlign": "center",
                  },
                  Object {},
                  Object {
                    "color": "white",
                  },
                ]
              }
            >
              Strong
            </Text>
          </View>
          <View
            accessible={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Array [
                  Array [
                    Object {
                      "backgroundColor": "#276612",
                      "opacity": 1,
                      "paddingBottom": 5,
                      "paddingTop": 5,
                    },
                    Object {
                      "flex": 1,
                    },
                  ],
                  Object {
                    "borderLeftColor": "#aee74a",
                    "borderLeftWidth": 1,
                  },
                ],
                Object {
                  "flex": 1,
                },
                Object {
                  "borderRightColor": "#aee74a",
                  "borderRightWidth": 1,
                },
              ]
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "textAlign": "center",
                  },
                  Object {},
                  Object {
                    "color": "white",
                  },
                ]
              }
            >
              Fruity
            </Text>
          </View>
          <View
            accessible={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Array [
                  Array [
                    Object {
                      "backgroundColor": "#276612",
                      "opacity": 1,
                      "paddingBottom": 5,
                      "paddingTop": 5,
                    },
                    Object {
                      "flex": 1,
                    },
                  ],
                  Object {
                    "borderLeftColor": "#aee74a",
                    "borderLeftWidth": 1,
                  },
                ],
                Object {
                  "flex": 1,
                },
                Object {
                  "borderBottomRightRadius": 14,
                  "borderTopRightRadius": 14,
                },
              ]
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "textAlign": "center",
                  },
                  Object {},
                  Object {
                    "color": "white",
                  },
                ]
              }
            >
              Blonde
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "padding": 20,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#276612",
              "fontSize": 20,
              "paddingBottom": 10,
            }
          }
        >
          Origin
        </Text>
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#276612",
                "borderColor": "#aee74a",
                "borderRadius": 15,
                "borderWidth": 1,
                "flexDirection": "row",
                "overflow": "hidden",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Array [
                  Object {
                    "backgroundColor": "#276612",
                    "opacity": 1,
                    "paddingBottom": 5,
                    "paddingTop": 5,
                  },
                  Object {
                    "flex": 1,
                  },
                ],
                Object {
                  "flex": 1,
                },
                Object {
                  "borderBottomLeftRadius": 14,
                  "borderTopLeftRadius": 14,
                },
              ]
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "textAlign": "center",
                  },
                  Object {},
                  Object {
                    "color": "white",
                  },
                ]
              }
            >
              Domestic
            </Text>
          </View>
          <View
            accessible={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Array [
                  Array [
                    Object {
                      "backgroundColor": "#276612",
                      "opacity": 1,
                      "paddingBottom": 5,
                      "paddingTop": 5,
                    },
                    Object {
                      "flex": 1,
                    },
                  ],
                  Object {
                    "borderLeftColor": "#aee74a",
                    "borderLeftWidth": 1,
                  },
                ],
                Object {
                  "flex": 1,
                },
                Object {
                  "borderRightColor": "#aee74a",
                  "borderRightWidth": 1,
                },
              ]
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "textAlign": "center",
                  },
                  Object {},
                  Object {
                    "color": "white",
                  },
                ]
              }
            >
              Local
            </Text>
          </View>
          <View
            accessible={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Array [
                  Array [
                    Object {
                      "backgroundColor": "#276612",
                      "opacity": 1,
                      "paddingBottom": 5,
                      "paddingTop": 5,
                    },
                    Object {
                      "flex": 1,
                    },
                  ],
                  Object {
                    "borderLeftColor": "#aee74a",
                    "borderLeftWidth": 1,
                  },
                ],
                Object {
                  "flex": 1,
                },
                Object {
                  "borderBottomRightRadius": 14,
                  "borderTopRightRadius": 14,
                },
              ]
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "textAlign": "center",
                  },
                  Object {},
                  Object {
                    "color": "white",
                  },
                ]
              }
            >
              Import
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "justifyContent": "flex-end",
            "padding": 20,
          }
        }
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#276612",
              "borderRadius": 5,
              "marginBottom": 20,
              "opacity": 1,
              "padding": 10,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#ffffff",
                "fontSize": 17,
                "textAlign": "center",
              }
            }
          >
            Continue
          </Text>
        </View>
      </View>
      <View />
    </View>
  </RCTScrollView>
</View>
`;

exports[`profile renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "paddingTop": 20,
    }
  }
>
  <View>
    <View
      style={
        Object {
          "alignItems": "center",
          "borderBottomColor": "#E9E9E9",
          "borderBottomWidth": 0.5,
          "flexDirection": "row",
          "height": 65,
          "justifyContent": "center",
          "padding": 10,
        }
      }
    >
      <View
        style={
          Object {
            "left": 0,
            "paddingLeft": 15,
            "position": "absolute",
          }
        }
      >
        <RNGestureHandlerButton
          collapsable={false}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <Text />
          </View>
        </RNGestureHandlerButton>
      </View>
      <View>
        <Text
          style={
            Object {
              "color": "#000",
              "fontSize": 24,
              "textAlignVertical": "center",
            }
          }
        >
          Profile
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`recommendation renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "paddingTop": 20,
    }
  }
>
  <View>
    <View
      style={
        Object {
          "alignItems": "center",
          "borderBottomColor": "#E9E9E9",
          "borderBottomWidth": 0.5,
          "flexDirection": "row",
          "height": 65,
          "justifyContent": "center",
          "padding": 10,
        }
      }
    >
      <View
        style={
          Object {
            "left": 0,
            "paddingLeft": 15,
            "position": "absolute",
          }
        }
      >
        <RNGestureHandlerButton
          collapsable={false}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <Text />
          </View>
        </RNGestureHandlerButton>
      </View>
      <View>
        <Text
          style={
            Object {
              "color": "#000",
              "fontSize": 24,
              "textAlignVertical": "center",
            }
          }
        >
          Recommendations
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`search renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "paddingTop": 20,
    }
  }
>
  <View>
    <View
      style={
        Object {
          "alignItems": "center",
          "borderBottomColor": "#E9E9E9",
          "borderBottomWidth": 0.5,
          "flexDirection": "row",
          "height": 65,
          "justifyContent": "center",
          "padding": 10,
        }
      }
    >
      <View
        style={
          Object {
            "left": 0,
            "paddingLeft": 15,
            "position": "absolute",
          }
        }
      >
        <RNGestureHandlerButton
          collapsable={false}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <Text />
          </View>
        </RNGestureHandlerButton>
      </View>
      <View>
        <Text
          style={
            Object {
              "color": "#000",
              "fontSize": 24,
              "textAlignVertical": "center",
            }
          }
        >
          Settings
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`sign up renders correctly 1`] = `
<View
  onLayout={[Function]}
  style={
    Array [
      Object {
        "backgroundColor": "#FFF",
        "flex": 1,
        "justifyContent": "center",
        "paddingBottom": 225,
      },
      Object {
        "paddingBottom": 0,
      },
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexGrow": 1,
        "justifyContent": "center",
        "paddingBottom": 25,
        "paddingTop": 50,
      }
    }
  >
    <Image
      source={1}
      style={
        Object {
          "height": 300,
          "width": 300,
        }
      }
    />
    <Text
      style={
        Object {
          "color": "#000",
          "fontSize": 25,
          "fontWeight": "600",
          "marginTop": 5,
          "textAlign": "center",
          "width": 500,
        }
      }
    >
      Create an account
    </Text>
  </View>
  <View
    style={
      Object {
        "backgroundColor": "#FFF",
        "flex": 1,
        "justifyContent": "center",
        "paddingBottom": 225,
      }
    }
  >
    <View
      style={
        Object {
          "height": 100,
          "padding": 20,
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        autoCapitalize="none"
        autoCorrect={false}
        onChangeText={[Function]}
        onSubmitEditing={[Function]}
        placeholder="full name"
        placeholderTextColor="#FFF"
        rejectResponderTermination={true}
        returnKeyType="next"
        style={
          Object {
            "backgroundColor": "rgba(68, 126, 36, 0.6)",
            "borderRadius": 5,
            "color": "#FFF",
            "height": 50,
            "marginBottom": 20,
            "paddingHorizontal": 10,
          }
        }
        underlineColorAndroid="transparent"
      />
      <TextInput
        allowFontScaling={true}
        autoCapitalize="none"
        autoCorrect={false}
        keyboardType="email-address"
        onChangeText={[Function]}
        onSubmitEditing={[Function]}
        placeholder="email"
        placeholderTextColor="#FFF"
        rejectResponderTermination={true}
        returnKeyType="next"
        style={
          Object {
            "backgroundColor": "rgba(68, 126, 36, 0.6)",
            "borderRadius": 5,
            "color": "#FFF",
            "height": 50,
            "marginBottom": 20,
            "paddingHorizontal": 10,
          }
        }
        underlineColorAndroid="transparent"
      />
      <TextInput
        allowFontScaling={true}
        onChangeText={[Function]}
        onSubmitEditing={[Function]}
        placeholder="password"
        placeholderTextColor="#FFF"
        rejectResponderTermination={true}
        returnKeyType="go"
        secureTextEntry={true}
        style={
          Object {
            "backgroundColor": "rgba(68, 126, 36, 0.6)",
            "borderRadius": 5,
            "color": "#FFF",
            "height": 50,
            "marginBottom": 20,
            "paddingHorizontal": 10,
          }
        }
        underlineColorAndroid="transparent"
      />
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#276612",
            "borderRadius": 5,
            "marginBottom": 20,
            "opacity": 1,
            "padding": 10,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#ffffff",
              "fontSize": 17,
              "textAlign": "center",
            }
          }
        >
          Sign Up
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`sign up renders correctly 2`] = `
<View>
  <Text
    style={
      Object {
        "alignItems": "center",
        "color": "#000",
        "fontSize": 30,
        "fontWeight": "600",
        "justifyContent": "center",
        "marginTop": 355,
        "textAlign": "center",
      }
    }
  >
    We apologize, but access is limited to adults of legal drinking age.
  </Text>
</View>
`;
